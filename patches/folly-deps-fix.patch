diff --git a/CMake/folly-deps.cmake b/CMake/folly-deps.cmake
index 6077792..c3c1358 100644
--- a/CMake/folly-deps.cmake
+++ b/CMake/folly-deps.cmake
@@ -16,6 +16,9 @@ include(CheckCXXSourceCompiles)
 include(CheckIncludeFileCXX)
 include(CheckFunctionExists)
 
+include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
+conan_basic_setup()
+
 if(MSVC)
   set(Boost_USE_STATIC_LIBS ON) #Force static lib in msvc
 endif(MSVC)
@@ -32,31 +35,31 @@ find_package(Boost 1.51.0 MODULE
 list(APPEND FOLLY_LINK_LIBRARIES ${Boost_LIBRARIES})
 list(APPEND FOLLY_INCLUDE_DIRECTORIES ${Boost_INCLUDE_DIRS})
 
-find_package(DoubleConversion MODULE REQUIRED)
-list(APPEND FOLLY_LINK_LIBRARIES ${DOUBLE_CONVERSION_LIBRARY})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${DOUBLE_CONVERSION_INCLUDE_DIR})
+find_package(double-conversion MODULE REQUIRED)
+list(APPEND FOLLY_LINK_LIBRARIES ${double-conversion_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${double-conversion_INCLUDE_DIRS})
 
-find_package(Gflags MODULE)
-set(FOLLY_HAVE_LIBGFLAGS ${LIBGFLAGS_FOUND})
-list(APPEND FOLLY_LINK_LIBRARIES ${LIBGFLAGS_LIBRARY})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBGFLAGS_INCLUDE_DIR})
-list(APPEND CMAKE_REQUIRED_LIBRARIES ${LIBGFLAGS_LIBRARY})
-list(APPEND CMAKE_REQUIRED_INCLUDES ${LIBGFLAGS_INCLUDE_DIR})
+find_package(gflags MODULE)
+set(FOLLY_HAVE_LIBGFLAGS ${gflags_FOUND})
+list(APPEND FOLLY_LINK_LIBRARIES ${gflags_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${gflags_INCLUDE_DIRS})
+list(APPEND CMAKE_REQUIRED_LIBRARIES ${gflags_LIBRARIES})
+list(APPEND CMAKE_REQUIRED_INCLUDES ${gflags_INCLUDE_DIRS})
 
-find_package(Glog MODULE)
-set(FOLLY_HAVE_LIBGLOG ${GLOG_FOUND})
-list(APPEND FOLLY_LINK_LIBRARIES ${GLOG_LIBRARY})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${GLOG_INCLUDE_DIR})
+find_package(glog MODULE)
+set(FOLLY_HAVE_LIBGLOG ${glog_FOUND})
+list(APPEND FOLLY_LINK_LIBRARIES ${glog_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${glog_INCLUDE_DIRS})
 
-find_package(LibEvent MODULE REQUIRED)
-list(APPEND FOLLY_LINK_LIBRARIES ${LIBEVENT_LIB})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBEVENT_INCLUDE_DIR})
+find_package(libevent MODULE REQUIRED)
+list(APPEND FOLLY_LINK_LIBRARIES ${libevent_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${libevent_INCLUDE_DIRS})
 
 find_package(OpenSSL MODULE REQUIRED)
 list(APPEND FOLLY_LINK_LIBRARIES ${OPENSSL_LIBRARIES})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${OPENSSL_INCLUDE_DIR})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${OPENSSL_INCLUDE_DIRS})
 list(APPEND CMAKE_REQUIRED_LIBRARIES ${OPENSSL_LIBRARIES})
-list(APPEND CMAKE_REQUIRED_INCLUDES ${OPENSSL_INCLUDE_DIR})
+list(APPEND CMAKE_REQUIRED_INCLUDES ${OPENSSL_INCLUDE_DIRS})
 check_function_exists(ASN1_TIME_diff FOLLY_HAVE_OPENSSL_ASN1_TIME_DIFF)
 
 find_package(ZLIB MODULE)
@@ -66,48 +69,48 @@ if (ZLIB_FOUND)
   list(APPEND FOLLY_LINK_LIBRARIES ${ZLIB_LIBRARIES})
 endif()
 
-find_package(BZip2 MODULE)
-set(FOLLY_HAVE_LIBBZ2 ${BZIP2_FOUND})
-if (BZIP2_FOUND)
-  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${BZIP2_INCLUDE_DIRS})
-  list(APPEND FOLLY_LINK_LIBRARIES ${BZIP2_LIBRARIES})
+find_package(bzip2 MODULE)
+set(FOLLY_HAVE_LIBBZ2 ${bzip2_FOUND})
+if (bzip2_FOUND)
+  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${bzip2_INCLUDE_DIRS})
+  list(APPEND FOLLY_LINK_LIBRARIES ${bzip2_LIBRARIES})
 endif()
 
-find_package(LibLZMA MODULE)
-set(FOLLY_HAVE_LIBLZMA ${LIBLZMA_FOUND})
-if (LIBLZMA_FOUND)
-  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBLZMA_INCLUDE_DIRS})
-  list(APPEND FOLLY_LINK_LIBRARIES ${LIBLZMA_LIBRARIES})
+find_package(lzma MODULE)
+set(FOLLY_HAVE_LIBLZMA ${lzma_FOUND})
+if (lzma_FOUND)
+  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${lzma_INCLUDE_DIRS})
+  list(APPEND FOLLY_LINK_LIBRARIES ${lzma_LIBRARIES})
 endif()
 
-find_package(LZ4 MODULE)
-set(FOLLY_HAVE_LIBLZ4 ${LZ4_FOUND})
-if (LZ4_FOUND)
-  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LZ4_INCLUDE_DIR})
-  list(APPEND FOLLY_LINK_LIBRARIES ${LZ4_LIBRARY})
+find_package(lz4 MODULE)
+set(FOLLY_HAVE_LIBLZ4 ${lz4_FOUND})
+if (lz4_FOUND)
+  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${lz4_INCLUDE_DIRS})
+  list(APPEND FOLLY_LINK_LIBRARIES ${lz4_LIBRARIES})
 endif()
 
-find_package(Zstd MODULE)
-set(FOLLY_HAVE_LIBZSTD ${ZSTD_FOUND})
-if(ZSTD_FOUND)
-  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${ZSTD_INCLUDE_DIR})
-  list(APPEND FOLLY_LINK_LIBRARIES ${ZSTD_LIBRARY})
+find_package(zstd MODULE)
+set(FOLLY_HAVE_LIBZSTD ${zstd_FOUND})
+if(zstd_FOUND)
+  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${zstd_INCLUDE_DIRS})
+  list(APPEND FOLLY_LINK_LIBRARIES ${zstd_LIBRARIES})
 endif()
 
-find_package(Snappy MODULE)
-set(FOLLY_HAVE_LIBSNAPPY ${SNAPPY_FOUND})
-if (SNAPPY_FOUND)
-  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${SNAPPY_INCLUDE_DIR})
-  list(APPEND FOLLY_LINK_LIBRARIES ${SNAPPY_LIBRARY})
+find_package(snappy MODULE)
+set(FOLLY_HAVE_LIBSNAPPY ${snappy_FOUND})
+if (snappy_FOUND)
+  list(APPEND FOLLY_INCLUDE_DIRECTORIES ${snappy_INCLUDE_DIRS})
+  list(APPEND FOLLY_LINK_LIBRARIES ${snappy_LIBRARIES})
 endif()
 
-find_package(LibDwarf)
-list(APPEND FOLLY_LINK_LIBRARIES ${LIBDWARF_LIBRARIES})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBDWARF_INCLUDE_DIRS})
+find_package(libdwarf)
+list(APPEND FOLLY_LINK_LIBRARIES ${libdwarf_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${libdwarf_INCLUDE_DIRS})
 
-find_package(Libiberty)
-list(APPEND FOLLY_LINK_LIBRARIES ${LIBIBERTY_LIBRARIES})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBIBERTY_INCLUDE_DIRS})
+find_package(libiberty)
+list(APPEND FOLLY_LINK_LIBRARIES ${libiberty_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${libiberty_INCLUDE_DIRS})
 
 find_package(LibAIO)
 list(APPEND FOLLY_LINK_LIBRARIES ${LIBAIO_LIBRARIES})
@@ -117,9 +120,9 @@ find_package(LibUring)
 list(APPEND FOLLY_LINK_LIBRARIES ${LIBURING_LIBRARIES})
 list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBURING_INCLUDE_DIRS})
 
-find_package(Libsodium)
-list(APPEND FOLLY_LINK_LIBRARIES ${LIBSODIUM_LIBRARIES})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBSODIUM_INCLUDE_DIRS})
+find_package(libsodium)
+list(APPEND FOLLY_LINK_LIBRARIES ${libsodium_LIBRARIES})
+list(APPEND FOLLY_INCLUDE_DIRECTORIES ${libsodium_INCLUDE_DIRS})
 
 list(APPEND FOLLY_LINK_LIBRARIES ${CMAKE_DL_LIBS})
 list(APPEND CMAKE_REQUIRED_LIBRARIES ${CMAKE_DL_LIBS})
